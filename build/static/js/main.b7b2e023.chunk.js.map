{"version":3,"sources":["text/Text.js","components/NavTab.jsx","components/Header.jsx","App.js","index.js"],"names":["Text","label","content","navTab","DataTabs","text","useDisclosure","isOpen","onOpen","onClose","isFitted","orientation","margin","style","height","colorScheme","boxShadow","map","tab","index","_active","color","fontSize","letterSpacing","marginTop","textAlign","p","justifySelf","onClick","variant","size","Header","m","App","className","theme","extendTheme","colors","purple","1","2","3","4","5","ReactDOM","render","document","getElementById"],"mappings":"2OAAaA,EAAO,CAClB,CACEC,MAAO,eACPC,QACE,wZAEJ,CACED,MAAO,YACPC,QACE,iOAEJ,CACED,MAAO,YACPC,QACE,mQAEJ,CACED,MAAO,6BACPC,QACE,kOAEJ,CACED,MAAO,OACPC,QACE,sNAEJ,CACED,MAAO,oBAET,CACEA,MAAO,8BACPC,QACE,qN,OC4FSC,EAnGA,WACb,IAAMC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACOC,cAA5BC,EADqB,EACrBA,OAAQC,EADa,EACbA,OAAQC,EADK,EACLA,QACxB,OACE,eAAC,IAAD,CACEC,UAAU,EACVC,YAAY,WACZC,OAAO,IACPC,MAAO,CAAEC,OAAQ,QACjBC,YAAa,SACbC,UAAW,KANb,UAQE,cAAC,IAAD,UACGX,EAAKY,KAAI,SAACC,EAAKC,GAAN,OACR,cAAC,IAAD,CACEC,QAAS,CAAEC,MAAO,YAClBC,SAAU,MACVC,cAAe,QAHjB,SAMGL,EAAIjB,OAFAkB,QAMX,cAAC,IAAD,UACGd,EAAKY,KAAI,SAACC,EAAKC,GAAN,OACR,cAAC,IAAD,CACEK,UAAW,IACXC,UAAW,UACXH,SAAU,KACVC,cAAe,OACfG,EAAG,EALL,SAQGR,EAAIhB,SAAW,cAAC,IAAD,CAAQyB,YAAa,SAAUC,QAAS,kBAAMpB,KAA9C,qBAFXW,QAOX,eAAC,IAAD,CAAOZ,OAAQA,EAAQE,QAASA,EAAhC,UACE,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,CAAOoB,QAAQ,SAASC,KAAM,KAA9B,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,wBACA,cAAC,IAAD,+CAGJ,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,mBACA,cAAC,IAAD,oDAEF,eAAC,IAAD,WACE,cAAC,IAAD,mBACA,cAAC,IAAD,iDAEF,eAAC,IAAD,WACE,cAAC,IAAD,oBACA,cAAC,IAAD,yDAEF,eAAC,IAAD,WACE,cAAC,IAAD,kBACA,cAAC,IAAD,iEAEF,eAAC,IAAD,WACE,cAAC,IAAD,mBACA,cAAC,IAAD,mFAKF,eAAC,IAAD,WACE,cAAC,IAAD,oBACA,cAAC,IAAD,0DAEF,eAAC,IAAD,WACE,cAAC,IAAD,qBACA,cAAC,IAAD,2DAEF,eAAC,IAAD,WACE,cAAC,IAAD,sBACA,cAAC,IAAD,iEAWlB,OAAO,cAAC1B,EAAD,CAAUC,KAAML,K,SCxGV+B,MAbf,WACE,OACE,8BACE,eAAC,IAAD,CAASR,cAAe,QAASS,EAAG,EAAGV,SAAU,MAAjD,qBACW,IACT,cAAC,IAAD,CAASC,cAAe,QAASF,MAAO,WAAYC,SAAU,MAA9D,wBCMOW,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,kBCFAC,EAAQC,YAAY,CACxBC,OAAO,CACLC,OAAO,CACLC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,cAMTC,IAASC,OACP,cAAC,IAAD,CAAgBV,MAAOA,EAAvB,SACE,cAAC,EAAD,MAEFW,SAASC,eAAe,W","file":"static/js/main.b7b2e023.chunk.js","sourcesContent":["export const Text = [\n  {\n    label: \"Histórico\",\n    content:\n      \"A linguagem Java recebeu diversas influências de outras linguagens, principalmente do Algol58, Pascal, C, C++, Objective-C e Smalltalk. Ela foi desenvolvida inicialmente para a indústria televisiva, mas acabou sendo incorporada no Netscape, introduzindo o Java à web, onde ele se destacaria. Seus criadores são conhecidos como o 'Green Team' da Sun Microsystems, que foi comprada pela Oracle.\",\n  },\n  {\n    label: \"Paradigma\",\n    content:\n      \"Os princípios estabelecidos pelo Green Team eram: 'Simples, Robusto, Portável, Platform-Independent, Seguro, de Alta Performance, Multithreaded, Architecture Neutral, Orientado a Objeto, Interpretada e Dinâmica.'\",\n  },\n  {\n    label: \"JDK & JRE\",\n    content:\n      \"JDK(Java Development Kit ou Kit de Desenvolvimento Java) é o conjunto de ferramentas usadas para desenvolver na linguagem Java. Já o JRE(Java Runtime Environment ou Ambiente de Execução Java) permite a execução do código desenvolvido.\",\n  },\n  {\n    label: \"Processo de Execução\",\n    content:\n      \"O código Java é primeiramente compilado em um binário byte-code, depois esse binário é compilado pelo software JVM(Java Virtual Machine ou Máquina Virtual Java) e por fim o JVM roda o código compilado.\",\n  },\n  {\n    label: \"IDEs\",\n    content:\n      \"IDEs(Integrated Development Environment ou Ambiente de Desenvolvimento Integrado) são softwares específicos para desenvolvedores, eles ajudam-no a criar aplicações com o uso de tecnologias diversas.\",\n  },\n  {\n    label: \"Dados Primitivos\",\n  },\n  {\n    label: \"Aplicações e Exemplos\",\n    content:\n      \"O Java pode ser usado em uma variedade de áreas, como a de desenvolvimento de jogos(Minecraft), a de desenvolvimento de aplicações android(Android Studio) e a de desenvolvimento web(Spring Framework)\",\n  },\n  /* [\n      {\n        ke: 11,\n        link:\n          \"https://www.sciencedirect.com/topics/computer-science/java-programming-language\",\n      },\n      {\n        ke: 22,\n        link: \"https://www.javatpoint.com/java-tutorial\"\n      },\n      {\n        ke: 33,\n        link: \"https://www.theserverside.com/definition/Java\"\n      },\n      {\n        ke: 44,\n        link: \"https://canaltech.com.br/software/O-que-e-Java-JRE-JVM-e-JDK/\"\n      },\n    ], */\n];\n","import React from \"react\";\n\nimport {\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Button,\n} from \"@chakra-ui/react\";\n\nimport { Text } from \"../text/Text.js\";\n\nconst navTab = () => {\n  const DataTabs = ({ text }) => {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    return (\n      <Tabs\n        isFitted={true}\n        orientation=\"vertical\"\n        margin=\"8\"\n        style={{ height: \"73vh\" }}\n        colorScheme={\"purple\"}\n        boxShadow={\"lg\"}\n      >\n        <TabList>\n          {text.map((tab, index) => (\n            <Tab\n              _active={{ color: \"purple.2\" }}\n              fontSize={\"2xl\"}\n              letterSpacing={\"wider\"}\n              key={index}\n            >\n              {tab.label}\n            </Tab>\n          ))}\n        </TabList>\n        <TabPanels>\n          {text.map((tab, index) => (\n            <TabPanel\n              marginTop={\"5\"}\n              textAlign={\"justify\"}\n              fontSize={\"xl\"}\n              letterSpacing={\"wide\"}\n              p={4}\n              key={index}\n            >\n              {tab.content || <Button justifySelf={'center'} onClick={() => onOpen()}>Clique</Button>}\n            </TabPanel>\n          ))}\n        </TabPanels>\n\n        <Modal isOpen={isOpen} onClose={onClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalCloseButton />\n            <ModalBody>\n              <Table variant=\"simple\" size={\"lg\"}>\n                <Thead>\n                  <Tr>\n                    <Th>Tipo Java</Th>\n                    <Th>Capacidade de Armazenamento</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  <Tr>\n                    <Td>char</Td>\n                    <Td>16 bits – Caracteres Unicode.</Td>\n                  </Tr>\n                  <Tr>\n                    <Td>byte</Td>\n                    <Td>8 bits (1 byte) -128 até 127</Td>\n                  </Tr>\n                  <Tr>\n                    <Td>short</Td>\n                    <Td>16 bits (2 bytes) -32768 até 32,7677</Td>\n                  </Tr>\n                  <Tr>\n                    <Td>int</Td>\n                    <Td>32 bits (4 bytes) -2147483648 até 2147483647</Td>\n                  </Tr>\n                  <Tr>\n                    <Td>long</Td>\n                    <Td>\n                      64 bits (8 bytes) -9223372036854775808 até\n                      9223372036854775807\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td>float</Td>\n                    <Td>32 bits (4 bytes) 7 casas de precisão</Td>\n                  </Tr>\n                  <Tr>\n                    <Td>double</Td>\n                    <Td>64 bits (8 bytes) 15 casas de precisão</Td>\n                  </Tr>\n                  <Tr>\n                    <Td>boolean</Td>\n                    <Td>8 bits (1 byte) true ou falso</Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n      </Tabs>\n    );\n  };\n\n  return <DataTabs text={Text} />;\n};\n\nexport default navTab;\n","import React from \"react\";\n\nimport { Heading } from \"@chakra-ui/react\";\n\nfunction Header() {\n  return (\n    <div>\n      <Heading letterSpacing={\"0.3em\"} m={5} fontSize={\"5xl\"}>\n        Pesquisa{\" \"}\n        <Heading letterSpacing={\"0.2em\"} color={\"purple.3\"} fontSize={\"5xl\"}>\n          JAVA\n        </Heading>\n      </Heading>\n    </div>\n  );\n}\n\nexport default Header;\n","import \"./App.css\";\n\nimport Tab from './components/NavTab'\nimport Header from './components/Header'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Tab />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { ChakraProvider } from '@chakra-ui/react'\nimport { extendTheme } from '@chakra-ui/react'\n\nconst theme = extendTheme({\n  colors:{\n    purple:{\n      1: \"#4f0080\",\n      2: \"#bb4dff\",\n      3: \"#9e00ff\",\n      4: \"#5d2680\",\n      5: \"#7e00cc\",\n\n    }\n  }\n})\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <App />\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}